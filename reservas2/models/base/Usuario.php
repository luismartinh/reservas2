<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace app\models\base;

use Yii;
use yii\helpers\ArrayHelper;
use yii\behaviors\BlameableBehavior;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "usuario".
 *
 * @property integer $id
 * @property string $login
 * @property string $nombre
 * @property string $apellido
 * @property string $pwd
 * @property string $id_session
 * @property string $last_login_time
 * @property string $last_login_ip
 * @property string $codigo
 * @property integer $activo
 * @property string $auth_key
 * @property string $password_hash
 * @property string $password_reset_token
 * @property string $email
 * @property string $user_sign_token
 * @property string $access_token
 * @property string $locate
 * @property integer $nivel
 * @property integer $created_at
 * @property integer $updated_at
 * @property integer $created_by
 * @property integer $updated_by
 *
 * @property \app\models\Acceso[] $accesos
 * @property \app\models\GrupoAcceso[] $grupoAccesos
 * @property \app\models\GrupoAccesoUsuario[] $gruposAccesosUsuarios
 * @property \app\models\UsuarioAcceso[] $usuariosAccesos
 * @property \app\models\Sucursal[] $sucursales
 * @property \app\models\PuntoVenta[] $puntoVentas
 * @property \app\models\PuntoVenta $puntoVentaDefault
 */
abstract class Usuario extends ActiveRecordAudit
{

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'usuario';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        $behaviors = parent::behaviors();
        $behaviors['blameable'] = [
            'class' => BlameableBehavior::class,
        ];
        $behaviors['timestamp'] = [
            'class' => TimestampBehavior::class,
        ];

        return $behaviors;
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        $parentRules = parent::rules();
        return ArrayHelper::merge($parentRules, [
            [['login', 'nombre', 'apellido', 'pwd', 'nivel'], 'required'],
            [['last_login_time'], 'safe'],
            [['activo'], 'integer'],
            [['nivel'], 'integer', 'min' => 0, 'max' => 5],
            [
                [
                    'login',
                    'password_hash',
                    'password_reset_token',
                    'email',
                    'user_sign_token',
                    'access_token'
                ],
                'string',
                'max' => 255
            ],
            [['nombre', 'apellido', 'pwd', 'last_login_ip'], 'string', 'max' => 45],
            [['id_session'], 'string', 'max' => 150],
            [['codigo'], 'string', 'max' => 20],
            [['auth_key'], 'string', 'max' => 32],
            [['locate'], 'string', 'max' => 10],
            [['login'], 'unique'],
            [['password_reset_token'], 'unique'],

            // ✅ Si 'email' está vacío, conviértelo a NULL
            [['email'], 'default', 'value' => null],

            // ✅ Validación de email solo si tiene contenido
            [['email'], 'email', 'skipOnEmpty' => true],

            // ✅ Unique solo si el email tiene contenido
            [['email'], 'unique', 'skipOnEmpty' => true],
        ]);
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return ArrayHelper::merge(parent::attributeLabels(), [
            'id' => Yii::t('models', 'ID'),
            'login' => Yii::t('models', 'Usuario'),
            'nombre' => Yii::t('models', 'Nombre'),
            'apellido' => Yii::t('models', 'Apellido'),
            'pwd' => Yii::t('models', 'Password'),
            'id_session' => Yii::t('models', 'id Session'),
            'last_login_time' => Yii::t('models', 'Ultimo ingreso'),
            'last_login_ip' => Yii::t('models', 'Ip origen'),
            'codigo' => Yii::t('models', 'Codigo'),
            'activo' => Yii::t('models', 'Activo'),
            'auth_key' => Yii::t('models', 'Auth Key'),
            'password_hash' => Yii::t('models', 'Password Hash'),
            'password_reset_token' => Yii::t('models', 'Password Reset Token'),
            'email' => Yii::t('models', 'Email'),
            'created_at' => Yii::t('models', 'Created At'),
            'updated_at' => Yii::t('models', 'Updated At'),
            'created_by' => Yii::t('models', 'Created By'),
            'updated_by' => Yii::t('models', 'Updated By'),
            'user_sign_token' => Yii::t('models', 'User Sign Token'),
            'access_token' => Yii::t('models', 'Access Token'),
            'locate' => Yii::t('models', 'Locate'),
            'nivel' => Yii::t('models', 'Jerarquia'),
        ]);
    }


    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return ArrayHelper::merge(parent::attributeHints(), [
            'login' => Yii::t('models', 'Ingrese el usuario (login)'),
            'nombre' => Yii::t('models', 'Ingrese el Nombre del Usuario'),
            'apellido' => Yii::t('models', 'Ingrese el Apellido del Usuario'),
            'pwd' => Yii::t('models', 'Ingrese la contraseña del Usuario'),
            'codigo' => Yii::t('models', 'Ingrese el Codigo del usuario'),
            'activo' => Yii::t('models', 'Activar o desactivar el usuario'),
            'email' => Yii::t('models', 'direccion de Email'),
            'nivel' => Yii::t('models', 'Indique el nivel de acceso'),
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getAccesos()
    {
        return $this->hasMany(\app\models\Acceso::class, ['id' => 'id_accesos'])->viaTable('usuarios_accesos', ['id_usuario' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getGrupoAccesos()
    {
        return $this->hasMany(\app\models\GrupoAcceso::class, ['id' => 'id_grupo_acceso'])->viaTable('grupos_accesos_usuarios', ['id_usuario' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getGruposAccesosUsuarios()
    {
        return $this->hasMany(\app\models\GrupoAccesoUsuario::class, ['id_usuario' => 'id']);
    }


    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUsuariosAccesos()
    {
        return $this->hasMany(\app\models\UsuarioAcceso::class, ['id_usuario' => 'id']);
    }


    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSucursales()
    {
        return $this->hasMany(\app\models\Sucursal::class, ['id' => 'id_sucursal'])->viaTable('sucursal_usuario', ['id_usuario' => 'id']);
    }



    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPuntoVentas()
    {
        return $this->hasMany(\app\models\PuntoVenta::class, ['id' => 'id_punto_venta'])->viaTable('punto_venta_usuario', ['id_usuario' => 'id']);
    }

    public function getPuntoVentaDefault()
    {
        return $this->hasOne(\app\models\PuntoVenta::class, ['id' => 'id_punto_venta'])->viaTable('punto_venta_usuario_default', ['id_usuario' => 'id']);
    }

}
